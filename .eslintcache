[{"D:\\incubator\\JS Lessons\\src\\index.tsx":"1","D:\\incubator\\JS Lessons\\src\\redux\\currencyReducer.ts":"2","D:\\incubator\\JS Lessons\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx":"3","D:\\incubator\\JS Lessons\\src\\containers\\CurrencyExchangeContainer\\CurrencyEContainer.tsx":"4","D:\\incubator\\JS Lessons\\src\\redux\\actions.ts":"5","D:\\incubator\\JS Lessons\\src\\lessons\\lesson1\\lesson1.tsx":"6","D:\\incubator\\JS Lessons\\src\\lessons\\lesson3\\Lesson3.tsx":"7","D:\\incubator\\JS Lessons\\src\\lessons\\lesson4\\Lesson4.tsx":"8","D:\\incubator\\JS Lessons\\src\\lessons\\lesson4\\lesson_4.ts":"9","D:\\incubator\\JS Lessons\\src\\lessons\\lesson5\\lesson5.ts":"10","D:\\incubator\\JS Lessons\\src\\App.tsx":"11"},{"size":319,"mtime":1609752860853,"results":"12","hashOfConfig":"13"},{"size":1500,"mtime":1671442787558,"results":"14","hashOfConfig":"13"},{"size":3871,"mtime":1609757735301,"results":"15","hashOfConfig":"13"},{"size":4007,"mtime":1671438542790,"results":"16","hashOfConfig":"13"},{"size":1170,"mtime":1671392010842,"results":"17","hashOfConfig":"13"},{"size":961,"mtime":1671391060255,"results":"18","hashOfConfig":"13"},{"size":1599,"mtime":1601709406000,"results":"19","hashOfConfig":"13"},{"size":2047,"mtime":1673961524537,"results":"20","hashOfConfig":"13"},{"size":4893,"mtime":1673961743807,"results":"21","hashOfConfig":"13"},{"size":5843,"mtime":1673967174322,"results":"22","hashOfConfig":"13"},{"size":660,"mtime":1673967281718,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1x3hpx8",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\incubator\\JS Lessons\\src\\index.tsx",[],"D:\\incubator\\JS Lessons\\src\\redux\\currencyReducer.ts",[],"D:\\incubator\\JS Lessons\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx",[],"D:\\incubator\\JS Lessons\\src\\containers\\CurrencyExchangeContainer\\CurrencyEContainer.tsx",["47"],"D:\\incubator\\JS Lessons\\src\\redux\\actions.ts",[],"D:\\incubator\\JS Lessons\\src\\lessons\\lesson1\\lesson1.tsx",[],"D:\\incubator\\JS Lessons\\src\\lessons\\lesson3\\Lesson3.tsx",["48","49"],"D:\\incubator\\JS Lessons\\src\\lessons\\lesson4\\Lesson4.tsx",[],"D:\\incubator\\JS Lessons\\src\\lessons\\lesson4\\lesson_4.ts",["50","51","52"],"import {log} from \"util\";\r\n\r\nconsole.log('lesson 4');\r\n\r\n// http://latentflip.com/loupe/?code=JC5vbignYnV0dG9uJywgJ2NsaWNrJywgZnVuY3Rpb24gb25DbGljaygpIHsKICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gdGltZXIoKSB7CiAgICAgICAgY29uc29sZS5sb2coJ1lvdSBjbGlja2VkIHRoZSBidXR0b24hJyk7ICAgIAogICAgfSwgMjAwMCk7Cn0pOwoKY29uc29sZS5sb2coIkhpISIpOwoKc2V0VGltZW91dChmdW5jdGlvbiB0aW1lb3V0KCkgewogICAgY29uc29sZS5sb2coIkNsaWNrIHRoZSBidXR0b24hIik7Cn0sIDUwMDApOwoKY29uc29sZS5sb2coIldlbGNvbWUgdG8gbG91cGUuIik7!!!PGJ1dHRvbj5DbGljayBtZSE8L2J1dHRvbj4%3D\r\n// https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/\r\n\r\n\r\n// Task 01\r\n// Создайте промис, который постоянно находиться в состоянии pending.\r\n// В конструкторе промиса выведите в консоль сообщение \"Promise is created\".\r\n// const promis = new Promise((resolve, reject)=>{\r\n//\r\n// })\r\n//\r\n// console.log(promis)\r\n\r\n\r\n// Task 02\r\n// Создайте промис, который после создания сразу же переходит в состояние resolve\r\n// и возвращает строку 'Promise Data'\r\n// Получите данные промиса и выведите их в консоль\r\n// const promis = new Promise((resolve, reject)=>{\r\n// reject('Promise Error')\r\n// })\r\n// promis.then(data=> console.log(data))\r\n// Task 03\r\n// Создайте промис, который после создания сразу же переходит в состояние rejected\r\n// и возвращает строку 'Promise Error'\r\n// Получите данные промиса и выведите их в консоль\r\n\r\n\r\n// Task 04\r\n// Создайте промис, который переходит в состояние resolved через 3с.\r\n// (Используйте setTimeout)\r\n// и возвращает строку 'Promise Data'\r\n// Получите данные промиса и выведите их в консоль\r\n\r\n// const promis = new Promise((resolve, reject)=>{\r\n//\r\n//     setTimeout(()=>{\r\n//         resolve('Promise Data')\r\n//     },3000)\r\n//\r\n// })\r\n// promis.then(data=> console.log(data))\r\n// Task 05\r\n// Создайте литерал объекта handlePromise со следующими свойствами:\r\n// promise, resolve, reject, onSuccess, onError\r\n// Проинициализируйте первые три свойства null,\r\n// а последние два функциями, которые принимают один параметр и выводят\r\n// в консоль сообщения: первая - `Promise is resolved with data: ${paramName}`\r\n// вторая - `Promise is rejected with error: ${paramName}`\r\n\r\n// Создайте три обработчика события click для кнопок \"Create Promise\", \"Resolve Promise\", \"Reject Promise\".\r\n// Первый обработчик, создает промис, заполняет первые три свойства,\r\n// описаного выше объекта: свойство promise получает новый созданный промис,\r\n// свойства resolve и reject получают ссылки на соответствующие функции\r\n// resolve и reject. Следующие два обработчика запускают методы resolve и reject.\r\nconst handlePromise = {\r\n    promise: null,\r\n    resolve: null,\r\n    reject: null,\r\n    onSuccess(paramName: string) {\r\n        console.log(`Promise is resolved with data: ${paramName}`)\r\n    },\r\n    onError(paramName: string) {\r\n        console.log(`Promise is rejected with error: ${paramName}`)\r\n    }\r\n}\r\n\r\n\r\n// Task 06\r\n// Создайте промис, который через 1 с возвращает строку \"My name is\".\r\n// Создайте функцию onSuccess, которая получает один параметр,\r\n// прибавляет к нему Ваше имя и возвращает новую строку из функции\r\n// Создайте функцию print, которая выводит в консоль значение своего параметра\r\n// Добавьте два метода then и передайте созданные функции.\r\n\r\n\r\nnew Promise(() => {\r\n    setTimeout(()=>{\r\n\r\n    },1000)\r\n})\r\n\r\n// Task 7\r\n// Создайте три промиса. Первый промис возвращает объект { name: \"Anna\" } через 2с,\r\n// второй промис возвращает объект {age: 16} через 3 с, а третий {city: ''} через 4с.\r\n// Получите результаты работы промисов, объедините свойства объектов\r\n// и выведите в консоль {name, age, city}\r\n\r\n\r\n// just a plug\r\nexport default () => {\r\n};","D:\\incubator\\JS Lessons\\src\\lessons\\lesson5\\lesson5.ts",["53","54","55","56","57"],"D:\\incubator\\JS Lessons\\src\\App.tsx",["58","59"],{"ruleId":"60","severity":1,"message":"61","line":4,"column":9,"nodeType":"62","messageId":"63","endLine":4,"endColumn":17},{"ruleId":"60","severity":1,"message":"64","line":7,"column":26,"nodeType":"62","messageId":"63","endLine":7,"endColumn":41},{"ruleId":"60","severity":1,"message":"65","line":9,"column":32,"nodeType":"62","messageId":"63","endLine":9,"endColumn":53},{"ruleId":"60","severity":1,"message":"66","line":1,"column":9,"nodeType":"62","messageId":"63","endLine":1,"endColumn":12},{"ruleId":"60","severity":1,"message":"67","line":60,"column":7,"nodeType":"62","messageId":"63","endLine":60,"endColumn":20},{"ruleId":"68","severity":1,"message":"69","line":95,"column":1,"nodeType":"70","endLine":96,"endColumn":3},{"ruleId":"60","severity":1,"message":"66","line":1,"column":9,"nodeType":"62","messageId":"63","endLine":1,"endColumn":12},{"ruleId":"60","severity":1,"message":"71","line":99,"column":5,"nodeType":"62","messageId":"63","endLine":99,"endColumn":8},{"ruleId":"60","severity":1,"message":"72","line":100,"column":5,"nodeType":"62","messageId":"63","endLine":100,"endColumn":8},{"ruleId":"60","severity":1,"message":"73","line":112,"column":10,"nodeType":"62","messageId":"63","endLine":112,"endColumn":23},{"ruleId":"68","severity":1,"message":"69","line":124,"column":1,"nodeType":"70","endLine":124,"endColumn":25},{"ruleId":"60","severity":1,"message":"74","line":3,"column":8,"nodeType":"62","messageId":"63","endLine":3,"endColumn":15},{"ruleId":"60","severity":1,"message":"75","line":6,"column":8,"nodeType":"62","messageId":"63","endLine":6,"endColumn":15},"@typescript-eslint/no-unused-vars","'Dispatch' is defined but never used.","Identifier","unusedVar","'setSerachResult' is assigned a value but never used.","'setSerachResultByType' is assigned a value but never used.","'log' is defined but never used.","'handlePromise' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'One' is assigned a value but never used.","'Two' is assigned a value but never used.","'sumTwoNumbers' is defined but never used.","'Lesson1' is defined but never used.","'Lesson3' is defined but never used."]